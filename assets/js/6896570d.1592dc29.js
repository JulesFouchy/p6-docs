"use strict";(self.webpackChunkp6_docs=self.webpackChunkp6_docs||[]).push([[4213],{3905:(e,t,r)=>{r.d(t,{Zo:()=>d,kt:()=>f});var a=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function l(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?l(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):l(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},l=Object.keys(e);for(a=0;a<l.length;a++)r=l[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)r=l[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var p=a.createContext({}),i=function(e){var t=a.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},d=function(e){var t=i(e.components);return a.createElement(p.Provider,{value:t},e.children)},c="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,l=e.originalType,p=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),c=i(r),u=n,f=c["".concat(p,".").concat(u)]||c[u]||m[u]||l;return r?a.createElement(f,s(s({ref:t},d),{},{components:r})):a.createElement(f,s({ref:t},d))}));function f(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var l=r.length,s=new Array(l);s[0]=u;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o[c]="string"==typeof e?e:n,s[1]=o;for(var i=2;i<l;i++)s[i]=r[i];return a.createElement.apply(null,s)}return a.createElement.apply(null,r)}u.displayName="MDXCreateElement"},5269:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>p,contentTitle:()=>s,default:()=>m,frontMatter:()=>l,metadata:()=>o,toc:()=>i});var a=r(7462),n=(r(7294),r(3905));const l={title:"p6::ShaderPaths",sidebar_position:1},s="p6::ShaderPaths",o={unversionedId:"reference/Types/shader_paths",id:"reference/Types/shader_paths",title:"p6::ShaderPaths",description:"Summary",source:"@site/docs/reference/Types/shader_paths.md",sourceDirName:"reference/Types",slug:"/reference/Types/shader_paths",permalink:"/p6-docs/reference/Types/shader_paths",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{title:"p6::ShaderPaths",sidebar_position:1},sidebar:"reference",previous:{title:"p6::Shader",permalink:"/p6-docs/reference/Types/shader"},next:{title:"p6::ShaderSources",permalink:"/p6-docs/reference/Types/shader_sources"}},p={},i=[{value:"Summary",id:"summary",level:2},{value:"Details",id:"details",level:2},{value:"vertex",id:"vertex",level:3},{value:"fragment",id:"fragment",level:3},{value:"geometry",id:"geometry",level:3},{value:"tessellation_control",id:"tessellation_control",level:3},{value:"tessellation_evaluation",id:"tessellation_evaluation",level:3}],d={toc:i},c="wrapper";function m(e){let{components:t,...r}=e;return(0,n.kt)(c,(0,a.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"p6shaderpaths"},"p6::ShaderPaths"),(0,n.kt)("h2",{id:"summary"},"Summary"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null}),(0,n.kt)("th",{parentName:"tr",align:null},"Name"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"std::optional< std::filesystem::path >"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("strong",{parentName:"td"},(0,n.kt)("a",{parentName:"strong",href:"/reference/Types/shader_paths#vertex"},"vertex")))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"std::optional< std::filesystem::path >"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("strong",{parentName:"td"},(0,n.kt)("a",{parentName:"strong",href:"/reference/Types/shader_paths#fragment"},"fragment")))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"std::optional< std::filesystem::path >"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("strong",{parentName:"td"},(0,n.kt)("a",{parentName:"strong",href:"/reference/Types/shader_paths#geometry"},"geometry")))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"std::optional< std::filesystem::path >"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("strong",{parentName:"td"},(0,n.kt)("a",{parentName:"strong",href:"/reference/Types/shader_paths#tessellation_control"},"tessellation_control")))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"std::optional< std::filesystem::path >"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("strong",{parentName:"td"},(0,n.kt)("a",{parentName:"strong",href:"/reference/Types/shader_paths#tessellation_evaluation"},"tessellation_evaluation")))))),(0,n.kt)("h2",{id:"details"},"Details"),(0,n.kt)("h3",{id:"vertex"},"vertex"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-cpp"},"std::optional< std::filesystem::path > vertex {};\n")),(0,n.kt)("h3",{id:"fragment"},"fragment"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-cpp"},"std::optional< std::filesystem::path > fragment {};\n")),(0,n.kt)("h3",{id:"geometry"},"geometry"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-cpp"},"std::optional< std::filesystem::path > geometry {};\n")),(0,n.kt)("h3",{id:"tessellation_control"},"tessellation_control"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-cpp"},"std::optional< std::filesystem::path > tessellation_control {};\n")),(0,n.kt)("h3",{id:"tessellation_evaluation"},"tessellation_evaluation"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-cpp"},"std::optional< std::filesystem::path > tessellation_evaluation {};\n")),(0,n.kt)("hr",null),(0,n.kt)("p",null,"Updated on 2024 October 24"))}m.isMDXComponent=!0}}]);