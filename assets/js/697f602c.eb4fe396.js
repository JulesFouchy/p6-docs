"use strict";(self.webpackChunkp6_docs=self.webpackChunkp6_docs||[]).push([[486],{3905:function(e,t,r){r.d(t,{Zo:function(){return p},kt:function(){return d}});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var i=n.createContext({}),c=function(e){var t=n.useContext(i),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},p=function(e){var t=c(e.components);return n.createElement(i.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},y=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),y=c(r),d=a,f=y["".concat(i,".").concat(d)]||y[d]||u[d]||o;return r?n.createElement(f,l(l({ref:t},p),{},{components:r})):n.createElement(f,l({ref:t},p))}));function d(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,l=new Array(o);l[0]=y;var s={};for(var i in t)hasOwnProperty.call(t,i)&&(s[i]=t[i]);s.originalType=e,s.mdxType="string"==typeof e?e:a,l[1]=s;for(var c=2;c<o;c++)l[c]=r[c];return n.createElement.apply(null,l)}return n.createElement.apply(null,r)}y.displayName="MDXCreateElement"},5798:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return s},contentTitle:function(){return i},metadata:function(){return c},toc:function(){return p},default:function(){return y}});var n=r(2122),a=r(9756),o=(r(7294),r(3905)),l=["components"],s={title:"p6::KeyEvent"},i="p6::KeyEvent",c={unversionedId:"reference/Classes/structp6_1_1_key_event",id:"reference/Classes/structp6_1_1_key_event",isDocsHomePage:!1,title:"p6::KeyEvent",description:"Summary",source:"@site/docs/reference/Classes/structp6_1_1_key_event.md",sourceDirName:"reference/Classes",slug:"/reference/Classes/structp6_1_1_key_event",permalink:"/p6-docs/reference/Classes/structp6_1_1_key_event",tags:[],version:"current",frontMatter:{title:"p6::KeyEvent"},sidebar:"reference",previous:{title:"p6::Shader",permalink:"/p6-docs/reference/Classes/classp6_1_1_shader"},next:{title:"p6::MouseButton",permalink:"/p6-docs/reference/Classes/structp6_1_1_mouse_button"}},p=[{value:"Summary",id:"summary",children:[]},{value:"Details",id:"details",children:[{value:"logical_key",id:"logical_key",children:[]},{value:"physical_key",id:"physical_key",children:[]}]}],u={toc:p};function y(e){var t=e.components,r=(0,a.Z)(e,l);return(0,o.kt)("wrapper",(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"p6keyevent"},"p6::KeyEvent"),(0,o.kt)("h2",{id:"summary"},"Summary"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null}),(0,o.kt)("th",{parentName:"tr",align:null},"Name"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"std::string"),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("strong",{parentName:"td"},(0,o.kt)("a",{parentName:"strong",href:"/reference/Classes/structp6_1_1_key_event#logical_key"},"logical_key"))," ",(0,o.kt)("br",null),"The character that was pressed.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"int"),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("strong",{parentName:"td"},(0,o.kt)("a",{parentName:"strong",href:"/reference/Classes/structp6_1_1_key_event#physical_key"},"physical_key"))," ",(0,o.kt)("br",null),"The key at a given position on the keyboard. It is independent of the keyboard layout (e.g. GLFW_KEY_Q will correspond to the first key on the first row of your keyboard, no matter if you are using azerty instead of qwerty)")))),(0,o.kt)("h2",{id:"details"},"Details"),(0,o.kt)("h3",{id:"logical_key"},"logical_key"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},"std::string logical_key;\n")),(0,o.kt)("p",null,"The character that was pressed. "),(0,o.kt)("p",null,"This depends on the keyboard layout (qwerty vs azerty). If the key pressed was not a character (for example ENTER, SHIFT etc.) then this is an empty string. "),(0,o.kt)("h3",{id:"physical_key"},"physical_key"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},"int physical_key;\n")),(0,o.kt)("p",null,"The key at a given position on the keyboard. It is independent of the keyboard layout (e.g. GLFW_KEY_Q will correspond to the first key on the first row of your keyboard, no matter if you are using azerty instead of qwerty) "),(0,o.kt)("hr",null),(0,o.kt)("p",null,"Updated on 2022 January 08"))}y.isMDXComponent=!0}}]);