"use strict";(self.webpackChunkp6_docs=self.webpackChunkp6_docs||[]).push([[8815],{3905:(e,t,a)=>{a.d(t,{Zo:()=>s,kt:()=>f});var r=a(7294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},i=Object.keys(e);for(r=0;r<i.length;r++)a=i[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)a=i[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var m=r.createContext({}),p=function(e){var t=r.useContext(m),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},s=function(e){var t=p(e.components);return r.createElement(m.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},c=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,i=e.originalType,m=e.parentName,s=o(e,["components","mdxType","originalType","parentName"]),u=p(a),c=n,f=u["".concat(m,".").concat(c)]||u[c]||d[c]||i;return a?r.createElement(f,l(l({ref:t},s),{},{components:a})):r.createElement(f,l({ref:t},s))}));function f(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=a.length,l=new Array(i);l[0]=c;var o={};for(var m in t)hasOwnProperty.call(t,m)&&(o[m]=t[m]);o.originalType=e,o[u]="string"==typeof e?e:n,l[1]=o;for(var p=2;p<i;p++)l[p]=a[p];return r.createElement.apply(null,l)}return r.createElement.apply(null,a)}c.displayName="MDXCreateElement"},6356:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>m,contentTitle:()=>l,default:()=>d,frontMatter:()=>i,metadata:()=>o,toc:()=>p});var r=a(7462),n=(a(7294),a(3905));const i={title:"Image",summary:"Load and query information about images.",sidebar_position:1},l="Image",o={unversionedId:"reference/image",id:"reference/image",title:"Image",description:"Load and query information about images.",source:"@site/docs/reference/image.md",sourceDirName:"reference",slug:"/reference/image",permalink:"/p6-docs/reference/image",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{title:"Image",summary:"Load and query information about images.",sidebar_position:1},sidebar:"reference",previous:{title:"Events",permalink:"/p6-docs/reference/events"},next:{title:"Input",permalink:"/p6-docs/reference/input"}},m={},p=[{value:"Summary",id:"summary",level:2},{value:"Classes",id:"classes",level:3},{value:"Functions",id:"functions",level:3},{value:"Functions",id:"functions-1",level:2},{value:"load_image()",id:"load_image",level:3},{value:"load_image_buffer()",id:"load_image_buffer",level:3}],s={toc:p},u="wrapper";function d(e){let{components:t,...a}=e;return(0,n.kt)(u,(0,r.Z)({},s,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"image"},"Image"),(0,n.kt)("p",null,"Load and query information about images. "),(0,n.kt)("h2",{id:"summary"},"Summary"),(0,n.kt)("h3",{id:"classes"},"Classes"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null}),(0,n.kt)("th",{parentName:"tr",align:null},"Name"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"class"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("strong",{parentName:"td"},(0,n.kt)("a",{parentName:"strong",href:"/reference/Types/image"},"p6::Image")))))),(0,n.kt)("h3",{id:"functions"},"Functions"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null}),(0,n.kt)("th",{parentName:"tr",align:null},"Name"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"Image"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("strong",{parentName:"td"},(0,n.kt)("a",{parentName:"strong",href:"/reference/image#load_image"},"load_image")),"(",(0,n.kt)("inlineCode",{parentName:"td"},"std::filesystem::path")," file_path)",(0,n.kt)("br",null),"Loads an image from a file.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"img::Image"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("strong",{parentName:"td"},(0,n.kt)("a",{parentName:"strong",href:"/reference/image#load_image_buffer"},"load_image_buffer")),"(",(0,n.kt)("inlineCode",{parentName:"td"},"std::filesystem::path")," file_path)",(0,n.kt)("br",null),"For advanced uses only.")))),(0,n.kt)("h2",{id:"functions-1"},"Functions"),(0,n.kt)("h3",{id:"load_image"},"load_image()"),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},(0,n.kt)("inlineCode",{parentName:"p"},"Image")," ",(0,n.kt)("strong",{parentName:"p"},(0,n.kt)("a",{parentName:"strong",href:"/reference/image#load_image"},"load_image")),"(",(0,n.kt)("inlineCode",{parentName:"p"},"std::filesystem::path")," file_path);")),(0,n.kt)("p",null,"Loads an image from a file. "),(0,n.kt)("p",null,"If the path is relative, it will be relative to the directory containing your executable. Throws a ",(0,n.kt)("inlineCode",{parentName:"p"},"std::runtime_error")," if the file doesn't exist or isn't a valid image file. "),(0,n.kt)("h3",{id:"load_image_buffer"},"load_image_buffer()"),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},(0,n.kt)("inlineCode",{parentName:"p"},"img::Image")," ",(0,n.kt)("strong",{parentName:"p"},(0,n.kt)("a",{parentName:"strong",href:"/reference/image#load_image_buffer"},"load_image_buffer")),"(",(0,n.kt)("inlineCode",{parentName:"p"},"std::filesystem::path")," file_path);")),(0,n.kt)("p",null,"For advanced uses only. "),(0,n.kt)("p",null,"Loads an image from a file and returns the buffer of pixels and the size. If the path is relative, it will be relative to the directory containing your executable. Throws a ",(0,n.kt)("inlineCode",{parentName:"p"},"std::runtime_error")," if the file doesn't exist or isn't a valid image file. "),(0,n.kt)("hr",null),(0,n.kt)("p",null,"Updated on 2023 March 02"))}d.isMDXComponent=!0}}]);