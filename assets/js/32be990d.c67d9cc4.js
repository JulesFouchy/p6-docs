"use strict";(self.webpackChunkp6_docs=self.webpackChunkp6_docs||[]).push([[1870],{3905:(e,t,a)=>{a.d(t,{Zo:()=>c,kt:()=>k});var r=a(7294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function s(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function p(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?s(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):s(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},s=Object.keys(e);for(r=0;r<s.length;r++)a=s[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)a=s[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var i=r.createContext({}),l=function(e){var t=r.useContext(i),a=t;return e&&(a="function"==typeof e?e(t):p(p({},t),e)),a},c=function(e){var t=l(e.components);return r.createElement(i.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,s=e.originalType,i=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),u=l(a),m=n,k=u["".concat(i,".").concat(m)]||u[m]||d[m]||s;return a?r.createElement(k,p(p({ref:t},c),{},{components:a})):r.createElement(k,p({ref:t},c))}));function k(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var s=a.length,p=new Array(s);p[0]=m;var o={};for(var i in t)hasOwnProperty.call(t,i)&&(o[i]=t[i]);o.originalType=e,o[u]="string"==typeof e?e:n,p[1]=o;for(var l=2;l<s;l++)p[l]=a[l];return r.createElement.apply(null,p)}return r.createElement.apply(null,a)}m.displayName="MDXCreateElement"},2530:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>i,contentTitle:()=>p,default:()=>d,frontMatter:()=>s,metadata:()=>o,toc:()=>l});var r=a(7462),n=(a(7294),a(3905));const s={title:"p6::Canvas",summary:"A canvas is an image that can be drawn onto.",sidebar_position:1},p="p6::Canvas",o={unversionedId:"reference/Types/canvas",id:"reference/Types/canvas",title:"p6::Canvas",description:"Section: Canvas",source:"@site/docs/reference/Types/canvas.md",sourceDirName:"reference/Types",slug:"/reference/Types/canvas",permalink:"/p6-docs/reference/Types/canvas",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{title:"p6::Canvas",summary:"A canvas is an image that can be drawn onto.",sidebar_position:1},sidebar:"reference",previous:{title:"p6::BottomRightCorner",permalink:"/p6-docs/reference/Types/bottom_right_corner"},next:{title:"p6::CanvasSizeMode_FixedAspectRatio",permalink:"/p6-docs/reference/Types/canvas_size_mode___fixed_aspect_ratio"}},i={},l=[{value:"Summary",id:"summary",level:2},{value:"Details",id:"details",level:2},{value:"Canvas()",id:"canvas",level:3},{value:"size()",id:"size",level:3},{value:"aspect_ratio()",id:"aspect_ratio",level:3},{value:"inverse_aspect_ratio()",id:"inverse_aspect_ratio",level:3},{value:"texture()",id:"texture",level:3},{value:"render_target()",id:"render_target",level:3},{value:"render_target()",id:"render_target-1",level:3},{value:"resize()",id:"resize",level:3},{value:"destructive_resize()",id:"destructive_resize",level:3}],c={toc:l},u="wrapper";function d(e){let{components:t,...a}=e;return(0,n.kt)(u,(0,r.Z)({},c,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"p6canvas"},"p6::Canvas"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Section:")," ",(0,n.kt)("strong",{parentName:"p"},(0,n.kt)("a",{parentName:"strong",href:"/reference/canvas"},"Canvas"))),(0,n.kt)("p",null,"A canvas is an image that can be drawn onto. "),(0,n.kt)("p",null,"Inherits from ",(0,n.kt)("a",{parentName:"p",href:"/reference/Types/image_or_canvas"},"p6::ImageOrCanvas")),(0,n.kt)("h2",{id:"summary"},"Summary"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null}),(0,n.kt)("th",{parentName:"tr",align:null},"Name"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null}),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("strong",{parentName:"td"},(0,n.kt)("a",{parentName:"strong",href:"/reference/Types/canvas#canvas"},"Canvas")),"(",(0,n.kt)("inlineCode",{parentName:"td"},"ImageSize")," size, ",(0,n.kt)("inlineCode",{parentName:"td"},"glpp::TextureLayout")," texture_layout = {glpp::InternalFormat::RGBA16, glpp::Channels::RGBA, glpp::TexelDataType::UnsignedByte})",(0,n.kt)("br",null),"Creates an empty canvas texture_layout is an advanced setting; it controls how the pixels are gonna be stored on the GPU.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"ImageSize"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("strong",{parentName:"td"},(0,n.kt)("a",{parentName:"strong",href:"/reference/Types/canvas#size"},"size")),"() const",(0,n.kt)("br",null),"Returns the size in pixels.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"virtual float"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("strong",{parentName:"td"},(0,n.kt)("a",{parentName:"strong",href:"/reference/Types/canvas#aspect_ratio"},"aspect_ratio")),"() const override",(0,n.kt)("br",null),"Returns the aspect ratio (",(0,n.kt)("inlineCode",{parentName:"td"},"width / height"),")")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"float"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("strong",{parentName:"td"},(0,n.kt)("a",{parentName:"strong",href:"/reference/Types/canvas#inverse_aspect_ratio"},"inverse_aspect_ratio")),"() const",(0,n.kt)("br",null),"Returns the inverse aspect ratio (",(0,n.kt)("inlineCode",{parentName:"td"},"height / width"),")")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"virtual const Texture &"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("strong",{parentName:"td"},(0,n.kt)("a",{parentName:"strong",href:"/reference/Types/canvas#texture"},"texture")),"() const override",(0,n.kt)("br",null),"Returns the internal texture, that you can use to do advanced stuff with custom shaders.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"const glpp::RenderTarget &"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("strong",{parentName:"td"},(0,n.kt)("a",{parentName:"strong",href:"/reference/Types/canvas#render_target"},"render_target")),"() const",(0,n.kt)("br",null),"Returns the internal render target, that you can use to do advanced stuff.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"glpp::RenderTarget &"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("strong",{parentName:"td"},(0,n.kt)("a",{parentName:"strong",href:"/reference/Types/canvas#render_target"},"render_target")),"()",(0,n.kt)("br",null),"Returns the internal render target, that you can use to do advanced stuff.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"void"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("strong",{parentName:"td"},(0,n.kt)("a",{parentName:"strong",href:"/reference/Types/canvas#resize"},"resize")),"(",(0,n.kt)("inlineCode",{parentName:"td"},"ImageSize")," size)",(0,n.kt)("br",null),"Resizes the canvas.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"void"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("strong",{parentName:"td"},(0,n.kt)("a",{parentName:"strong",href:"/reference/Types/canvas#destructive_resize"},"destructive_resize")),"(",(0,n.kt)("inlineCode",{parentName:"td"},"ImageSize")," size)",(0,n.kt)("br",null),"Resizes the canvas.")))),(0,n.kt)("h2",{id:"details"},"Details"),(0,n.kt)("h3",{id:"canvas"},"Canvas()"),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},(0,n.kt)("strong",{parentName:"p"},(0,n.kt)("a",{parentName:"strong",href:"/reference/Types/canvas#canvas"},"Canvas")),"(",(0,n.kt)("inlineCode",{parentName:"p"},"ImageSize")," size, ",(0,n.kt)("inlineCode",{parentName:"p"},"glpp::TextureLayout")," texture_layout ={glpp::InternalFormat::RGBA16, glpp::Channels::RGBA, glpp::TexelDataType::UnsignedByte});")),(0,n.kt)("p",null,"Creates an empty canvas texture_layout is an advanced setting; it controls how the pixels are gonna be stored on the GPU. "),(0,n.kt)("h3",{id:"size"},"size()"),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},(0,n.kt)("inlineCode",{parentName:"p"},"ImageSize")," ",(0,n.kt)("strong",{parentName:"p"},(0,n.kt)("a",{parentName:"strong",href:"/reference/Types/canvas#size"},"size")),"() const;")),(0,n.kt)("p",null,"Returns the size in pixels. "),(0,n.kt)("h3",{id:"aspect_ratio"},"aspect_ratio()"),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},(0,n.kt)("inlineCode",{parentName:"p"},"float")," ",(0,n.kt)("strong",{parentName:"p"},(0,n.kt)("a",{parentName:"strong",href:"/reference/Types/canvas#aspect_ratio"},"aspect_ratio")),"() const override;")),(0,n.kt)("p",null,"Returns the aspect ratio (",(0,n.kt)("inlineCode",{parentName:"p"},"width / height"),") "),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Reimplements"),": ",(0,n.kt)("a",{parentName:"p",href:"/reference/Types/image_or_canvas#aspect_ratio"},"p6::ImageOrCanvas::aspect_ratio")),(0,n.kt)("h3",{id:"inverse_aspect_ratio"},"inverse_aspect_ratio()"),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},(0,n.kt)("inlineCode",{parentName:"p"},"float")," ",(0,n.kt)("strong",{parentName:"p"},(0,n.kt)("a",{parentName:"strong",href:"/reference/Types/canvas#inverse_aspect_ratio"},"inverse_aspect_ratio")),"() const;")),(0,n.kt)("p",null,"Returns the inverse aspect ratio (",(0,n.kt)("inlineCode",{parentName:"p"},"height / width"),") "),(0,n.kt)("h3",{id:"texture"},"texture()"),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},(0,n.kt)("inlineCode",{parentName:"p"},"const Texture &")," ",(0,n.kt)("strong",{parentName:"p"},(0,n.kt)("a",{parentName:"strong",href:"/reference/Types/canvas#texture"},"texture")),"() const override;")),(0,n.kt)("p",null,"Returns the internal texture, that you can use to do advanced stuff with custom shaders. "),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Reimplements"),": ",(0,n.kt)("a",{parentName:"p",href:"/reference/Types/image_or_canvas#texture"},"p6::ImageOrCanvas::texture")),(0,n.kt)("h3",{id:"render_target"},"render_target()"),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},(0,n.kt)("inlineCode",{parentName:"p"},"const glpp::RenderTarget &")," ",(0,n.kt)("strong",{parentName:"p"},(0,n.kt)("a",{parentName:"strong",href:"/reference/Types/canvas#render_target"},"render_target")),"() const;")),(0,n.kt)("p",null,"Returns the internal render target, that you can use to do advanced stuff. "),(0,n.kt)("h3",{id:"render_target-1"},"render_target()"),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},(0,n.kt)("inlineCode",{parentName:"p"},"glpp::RenderTarget &")," ",(0,n.kt)("strong",{parentName:"p"},(0,n.kt)("a",{parentName:"strong",href:"/reference/Types/canvas#render_target"},"render_target")),"();")),(0,n.kt)("p",null,"Returns the internal render target, that you can use to do advanced stuff. "),(0,n.kt)("h3",{id:"resize"},"resize()"),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},(0,n.kt)("inlineCode",{parentName:"p"},"void")," ",(0,n.kt)("strong",{parentName:"p"},(0,n.kt)("a",{parentName:"strong",href:"/reference/Types/canvas#resize"},"resize")),"(",(0,n.kt)("inlineCode",{parentName:"p"},"ImageSize")," size);")),(0,n.kt)("p",null,"Resizes the canvas. "),(0,n.kt)("h3",{id:"destructive_resize"},"destructive_resize()"),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},(0,n.kt)("inlineCode",{parentName:"p"},"void")," ",(0,n.kt)("strong",{parentName:"p"},(0,n.kt)("a",{parentName:"strong",href:"/reference/Types/canvas#destructive_resize"},"destructive_resize")),"(",(0,n.kt)("inlineCode",{parentName:"p"},"ImageSize")," size);")),(0,n.kt)("p",null,"Resizes the canvas. "),(0,n.kt)("p",null,"\u26a0\ufe0f All of its pixel content is lost. If you don't want that you can use ",(0,n.kt)("a",{parentName:"p",href:"/reference/Types/canvas#resize"},"resize()")," instead. "),(0,n.kt)("hr",null),(0,n.kt)("p",null,"Updated on 2024 August 01"))}d.isMDXComponent=!0}}]);