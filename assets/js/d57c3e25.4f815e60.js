"use strict";(self.webpackChunkp6_docs=self.webpackChunkp6_docs||[]).push([[357],{3905:function(e,t,a){a.d(t,{Zo:function(){return c},kt:function(){return d}});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function p(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var m=n.createContext({}),s=function(e){var t=n.useContext(m),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},c=function(e){var t=s(e.components);return n.createElement(m.Provider,{value:t},e.children)},i={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,l=e.originalType,m=e.parentName,c=p(e,["components","mdxType","originalType","parentName"]),u=s(a),d=r,k=u["".concat(m,".").concat(d)]||u[d]||i[d]||l;return a?n.createElement(k,o(o({ref:t},c),{},{components:a})):n.createElement(k,o({ref:t},c))}));function d(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=a.length,o=new Array(l);o[0]=u;var p={};for(var m in t)hasOwnProperty.call(t,m)&&(p[m]=t[m]);p.originalType=e,p.mdxType="string"==typeof e?e:r,o[1]=p;for(var s=2;s<l;s++)o[s]=a[s];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}u.displayName="MDXCreateElement"},4674:function(e,t,a){a.r(t),a.d(t,{frontMatter:function(){return p},contentTitle:function(){return m},metadata:function(){return s},toc:function(){return c},default:function(){return u}});var n=a(2122),r=a(9756),l=(a(7294),a(3905)),o=["components"],p={title:"p6"},m="p6",s={unversionedId:"reference/Namespaces/namespacep6",id:"reference/Namespaces/namespacep6",isDocsHomePage:!1,title:"p6",description:"Classes",source:"@site/docs/reference/Namespaces/namespacep6.md",sourceDirName:"reference/Namespaces",slug:"/reference/Namespaces/namespacep6",permalink:"/p6-docs/reference/Namespaces/namespacep6",tags:[],version:"current",frontMatter:{title:"p6"},sidebar:"reference",previous:{title:"Update Flow",permalink:"/p6-docs/reference/Modules/group__update-flow"},next:{title:"Shader",permalink:"/p6-docs/reference/Pages/md__c___dev__c___p6_docs_examples_basic_p6_src___r_e_a_d_m_e"}},c=[{value:"Classes",id:"classes",children:[]},{value:"Types",id:"types",children:[]},{value:"Functions",id:"functions",children:[]},{value:"Types Documentation",id:"types-documentation",children:[{value:"Button",id:"button",children:[]},{value:"ImageSize",id:"imagesize",children:[]},{value:"Texture",id:"texture",children:[]}]},{value:"Functions Documentation",id:"functions-documentation",children:[{value:"get_context()",id:"get_context",children:[]},{value:"window_size_callback()",id:"window_size_callback",children:[]},{value:"mouse_button_callback()",id:"mouse_button_callback",children:[]},{value:"scroll_callback()",id:"scroll_callback",children:[]},{value:"key_callback()",id:"key_callback",children:[]},{value:"load_image()",id:"load_image",children:[]},{value:"map()",id:"map",children:[]},{value:"link_program()",id:"link_program",children:[]},{value:"set_uniform()",id:"set_uniform",children:[]}]}],i={toc:c};function u(e){var t=e.components,a=(0,r.Z)(e,o);return(0,l.kt)("wrapper",(0,n.Z)({},i,a,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"p6"},"p6"),(0,l.kt)("h2",{id:"classes"},"Classes"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null}),(0,l.kt)("th",{parentName:"tr",align:null},"Name"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"class"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("a",{parentName:"strong",href:"/reference/Classes/classp6_1_1_color"},"p6::Color")))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"class"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("a",{parentName:"strong",href:"/reference/Classes/classp6_1_1_context"},"p6::Context")))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"class"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("a",{parentName:"strong",href:"/reference/Classes/classp6_1_1_image"},"p6::Image"))," ",(0,l.kt)("br",null),"An image can be drawn onto, and can be displayed.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"struct"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("a",{parentName:"strong",href:"/reference/Classes/structp6_1_1_key_event"},"p6::KeyEvent")))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"struct"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("a",{parentName:"strong",href:"/reference/Classes/structp6_1_1_mouse_button"},"p6::MouseButton")))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"struct"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("a",{parentName:"strong",href:"/reference/Classes/structp6_1_1_mouse_drag"},"p6::MouseDrag")))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"struct"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("a",{parentName:"strong",href:"/reference/Classes/structp6_1_1_mouse_move"},"p6::MouseMove")))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"struct"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("a",{parentName:"strong",href:"/reference/Classes/structp6_1_1_mouse_scroll"},"p6::MouseScroll")))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"struct"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("a",{parentName:"strong",href:"/reference/Classes/structp6_1_1_rectangle_params"},"p6::RectangleParams")))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"class"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("a",{parentName:"strong",href:"/reference/Classes/classp6_1_1_shader"},"p6::Shader")))))),(0,l.kt)("h2",{id:"types"},"Types"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null}),(0,l.kt)("th",{parentName:"tr",align:null},"Name"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"enum class"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("a",{parentName:"strong",href:"/reference/Namespaces/namespacep6#button"},"Button"))," { Left, Right, Middle}")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"using glpp::ImageSize"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("a",{parentName:"strong",href:"/reference/Namespaces/namespacep6#imagesize"},"ImageSize")))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"using glpp::Texture"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("a",{parentName:"strong",href:"/reference/Namespaces/namespacep6#texture"},"Texture")))))),(0,l.kt)("h2",{id:"functions"},"Functions"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null}),(0,l.kt)("th",{parentName:"tr",align:null},"Name"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/reference/Classes/classp6_1_1_context"},"Context")," &"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("a",{parentName:"strong",href:"/reference/Namespaces/namespacep6#get_context"},"get_context")),"(GLFWwindow * window)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"void"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("a",{parentName:"strong",href:"/reference/Namespaces/namespacep6#window_size_callback"},"window_size_callback")),"(GLFWwindow * window, int width, int height)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"void"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("a",{parentName:"strong",href:"/reference/Namespaces/namespacep6#mouse_button_callback"},"mouse_button_callback")),"(GLFWwindow * window, int button, int action, int mods)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"void"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("a",{parentName:"strong",href:"/reference/Namespaces/namespacep6#scroll_callback"},"scroll_callback")),"(GLFWwindow * window, double x, double y)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"void"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("a",{parentName:"strong",href:"/reference/Namespaces/namespacep6#key_callback"},"key_callback")),"(GLFWwindow * window, int key, int scancode, int action, int mods)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/reference/Classes/classp6_1_1_image"},"Image")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("a",{parentName:"strong",href:"/reference/Namespaces/namespacep6#load_image"},"load_image")),"(const char * file_path)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"template <typename T ",">"," ",(0,l.kt)("br",null),"T"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("a",{parentName:"strong",href:"/reference/Modules/group__math#map"},"map")),"(T x, T from_min, T from_max, T to_min, T to_max)",(0,l.kt)("br",null),"Maps x, which is in the range ","[from_mix, from_max]",", to the range ","[to_min, to_max]",".")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"void"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("a",{parentName:"strong",href:"/reference/Namespaces/namespacep6#link_program"},"link_program")),"(const glpp::ext::Program & program, const glpp::VertexShader & vertex_shader, const glpp::FragmentShader & fragment_shader)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"template <typename T ",">"," ",(0,l.kt)("br",null),"void"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("a",{parentName:"strong",href:"/reference/Namespaces/namespacep6#set_uniform"},"set_uniform")),"(const glpp::ext::Program & program, const std::string & uniform_name, T && v)")))),(0,l.kt)("h2",{id:"types-documentation"},"Types Documentation"),(0,l.kt)("h3",{id:"button"},"Button"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Enumerator"),(0,l.kt)("th",{parentName:"tr",align:null},"Value"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Left"),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Right"),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Middle"),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null})))),(0,l.kt)("h3",{id:"imagesize"},"ImageSize"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"using p6::ImageSize = typedef glpp::ImageSize;\n")),(0,l.kt)("h3",{id:"texture"},"Texture"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"using p6::Texture = typedef glpp::Texture;\n")),(0,l.kt)("h2",{id:"functions-documentation"},"Functions Documentation"),(0,l.kt)("h3",{id:"get_context"},"get_context()"),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},(0,l.kt)("strong",{parentName:"p"},(0,l.kt)("a",{parentName:"strong",href:"/reference/Namespaces/namespacep6#get_context"},"get_context")),"(GLFWwindow * window);")),(0,l.kt)("h3",{id:"window_size_callback"},"window_size_callback()"),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},(0,l.kt)("strong",{parentName:"p"},(0,l.kt)("a",{parentName:"strong",href:"/reference/Namespaces/namespacep6#window_size_callback"},"window_size_callback")),"(GLFWwindow * window, int width, int height);")),(0,l.kt)("h3",{id:"mouse_button_callback"},"mouse_button_callback()"),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},(0,l.kt)("strong",{parentName:"p"},(0,l.kt)("a",{parentName:"strong",href:"/reference/Namespaces/namespacep6#mouse_button_callback"},"mouse_button_callback")),"(GLFWwindow * window, int button, int action, int mods);")),(0,l.kt)("h3",{id:"scroll_callback"},"scroll_callback()"),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},(0,l.kt)("strong",{parentName:"p"},(0,l.kt)("a",{parentName:"strong",href:"/reference/Namespaces/namespacep6#scroll_callback"},"scroll_callback")),"(GLFWwindow * window, double x, double y);")),(0,l.kt)("h3",{id:"key_callback"},"key_callback()"),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},(0,l.kt)("strong",{parentName:"p"},(0,l.kt)("a",{parentName:"strong",href:"/reference/Namespaces/namespacep6#key_callback"},"key_callback")),"(GLFWwindow * window, int key, int scancode, int action, int mods);")),(0,l.kt)("h3",{id:"load_image"},"load_image()"),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},(0,l.kt)("strong",{parentName:"p"},(0,l.kt)("a",{parentName:"strong",href:"/reference/Namespaces/namespacep6#load_image"},"load_image")),"(const char * file_path);")),(0,l.kt)("h3",{id:"map"},"map()"),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},(0,l.kt)("strong",{parentName:"p"},(0,l.kt)("a",{parentName:"strong",href:"/reference/Modules/group__math#map"},"map")),"(T x, T from_min, T from_max, T to_min, T to_max);")),(0,l.kt)("p",null,"Maps x, which is in the range ","[from_mix, from_max]",", to the range ","[to_min, to_max]",". "),(0,l.kt)("p",null,"For example if x == from_min, then the function returns to_min if x == (from_min + from_max) / 2 then the function returns (to_min + to_max) / 2 if x is outside of the range ","[from_min, from_max]"," the result will be outside of ","[to_min, to_max]",", the same linear behaviour still applies "),(0,l.kt)("h3",{id:"link_program"},"link_program()"),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},(0,l.kt)("strong",{parentName:"p"},(0,l.kt)("a",{parentName:"strong",href:"/reference/Namespaces/namespacep6#link_program"},"link_program")),"(const glpp::ext::Program & program, const glpp::VertexShader & vertex_shader, const glpp::FragmentShader & fragment_shader);")),(0,l.kt)("h3",{id:"set_uniform"},"set_uniform()"),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},(0,l.kt)("strong",{parentName:"p"},(0,l.kt)("a",{parentName:"strong",href:"/reference/Namespaces/namespacep6#set_uniform"},"set_uniform")),"(const glpp::ext::Program & program, const std::string & uniform_name, T && v);")),(0,l.kt)("hr",null),(0,l.kt)("p",null,"Updated on 2022 January 08"))}u.isMDXComponent=!0}}]);