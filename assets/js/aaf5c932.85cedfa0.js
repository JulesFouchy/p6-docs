"use strict";(self.webpackChunkp6_docs=self.webpackChunkp6_docs||[]).push([[4592],{3905:function(e,t,n){n.d(t,{Zo:function(){return m},kt:function(){return d}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=a.createContext({}),l=function(e){var t=a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},m=function(e){var t=l(e.components);return a.createElement(c.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,c=e.parentName,m=p(e,["components","mdxType","originalType","parentName"]),u=l(n),d=r,g=u["".concat(c,".").concat(d)]||u[d]||s[d]||i;return n?a.createElement(g,o(o({ref:t},m),{},{components:n})):a.createElement(g,o({ref:t},m))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=u;var p={};for(var c in t)hasOwnProperty.call(t,c)&&(p[c]=t[c]);p.originalType=e,p.mdxType="string"==typeof e?e:r,o[1]=p;for(var l=2;l<i;l++)o[l]=n[l];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},1982:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return p},contentTitle:function(){return c},metadata:function(){return l},toc:function(){return m},default:function(){return u}});var a=n(2122),r=n(9756),i=(n(7294),n(3905)),o=["components"],p={title:"Images"},c=void 0,l={unversionedId:"tutorials/images",id:"tutorials/images",isDocsHomePage:!1,title:"Images",description:"Loading an image",source:"@site/docs/tutorials/05-images.md",sourceDirName:"tutorials",slug:"/tutorials/images",permalink:"/p6-docs/tutorials/images",tags:[],version:"current",sidebarPosition:5,frontMatter:{title:"Images"},sidebar:"tutorials",previous:{title:"Drawing",permalink:"/p6-docs/tutorials/drawing"}},m=[{value:"Loading an image",id:"loading-an-image",children:[]},{value:"Displaying an image",id:"displaying-an-image",children:[]},{value:"Drawing on an image",id:"drawing-on-an-image",children:[]}],s={toc:m};function u(e){var t=e.components,n=(0,r.Z)(e,o);return(0,i.kt)("wrapper",(0,a.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"loading-an-image"},"Loading an image"),(0,i.kt)("p",null,"You can load any image (",(0,i.kt)("em",{parentName:"p"},"png"),", ",(0,i.kt)("em",{parentName:"p"},"jpeg"),", ",(0,i.kt)("em",{parentName:"p"},"etc."),") with ",(0,i.kt)("inlineCode",{parentName:"p"},"load_image()"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},'const p6::Image image = p6::load_image("img/my_file.png");\n')),(0,i.kt)("p",null,"In order for this to work you must have an ",(0,i.kt)("em",{parentName:"p"},"img")," folder at the root of your project, with a ",(0,i.kt)("em",{parentName:"p"},"my_file.png")," file in it. ",(0,i.kt)("strong",{parentName:"p"},"AND")," you must declare your images folder in CMake: ",(0,i.kt)("inlineCode",{parentName:"p"},"p6_copy_folder(${PROJECT_NAME} img)"),"."),(0,i.kt)("p",null,"For a complete example of this, check out ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/JulesFouchy/p6-docs/tree/main/examples/complete"},"this example"),"."),(0,i.kt)("h2",{id:"displaying-an-image"},"Displaying an image"),(0,i.kt)("p",null,"You can draw an image with the ",(0,i.kt)("inlineCode",{parentName:"p"},"image()")," function:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},'const auto image = p6::load_image("img/my_file.png");\nctx.image(image, p6::Center{},\n          p6::RadiusY{0.2f}); // Give it a height of 0.4 The width will be deduced based on the aspect_ratio of the image\n')),(0,i.kt)("p",null,"Since an image has an aspect ratio that we want to try and preserve it is recommended to use either ",(0,i.kt)("inlineCode",{parentName:"p"},"p6::RadiusX"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"p6::RadiusY"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"p6::FitX")," or ",(0,i.kt)("inlineCode",{parentName:"p"},"p6::FitY")," to describe the size of the image. If you are ok with getting a distorted image then you can use ",(0,i.kt)("inlineCode",{parentName:"p"},"p6::Radii")," to specify both the width and the height, or ",(0,i.kt)("inlineCode",{parentName:"p"},"p6::FullScreen"),"."),(0,i.kt)("h2",{id:"drawing-on-an-image"},"Drawing on an image"),(0,i.kt)("p",null,"You can use images as canvases that you draw onto just as you would with the screen. All drawings between the calls to ",(0,i.kt)("inlineCode",{parentName:"p"},"ctx.render_to_image(image)")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"ctx.render_to_screen()")," will apply to the image, not to the screen:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},"#include <p6/p6.h>\n\nint main()\n{\n    auto ctx   = p6::Context{};\n    auto image = p6::Image{ctx.window_size()}; // Create an empty image with the same size as the window\n    ctx.render_to_image(image);\n        ctx.background({0.3f, 0.5f, 0.9f, 0.5f}); // background() applies to image, not to the screen\n        ctx.circle();                             // circle() applies to image, not to the screen\n    ctx.render_to_screen();\n    ctx.window_resized = [&]() {\n        image.resize(ctx.window_size()); // Make sure that the image still has the same size as the window even after it resizes\n    };\n    ctx.update = [&]() {\n        ctx.background({});\n        ctx.image(image);\n    };\n    ctx.start();\n}\n")),(0,i.kt)("p",null,"For a more detailed example, check ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/JulesFouchy/p6-docs/blob/main/tests/render_to_image.cpp"},"this one out"),"."))}u.isMDXComponent=!0}}]);